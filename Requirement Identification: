#User Stories and Detailed Requirements

##User Stories

As an investor, I want to register and log in to the website application so that I can access my personal data.

As a corporate decision maker, I want the website application to store the retrieved data so I can access it.

As a market researcher, I want the application to handle errors and provide error messages.

As a risk manager, I want the application to provide tools for assessing market risks based on historical
share price data, and I want to generate custom risk reports that can be easily shared with stakeholders.

As a financial analyst,I want to view time-series graphs of daily share prices for one or two companies so that I can compare their performance.

**Requirements Clearly Identified and Scoped**

As an investor, I want to register and log in to the website application so that I can access my personal data.
As a corporate decision maker, I want the website application to store the retrieved data so I can access it.
As a market researcher, I want the application to handle errors and provide error messages.
As a risk manager, I want the application to provide tools for assessing market risks based on historical share price data, 
and I want to generate custom risk reports that can be easily shared with stakeholders.
As a financial analyst, I want to view time-series graphs of daily share prices for one or two companies so that I can compare their performance.

**Functional Requirements**
User Registration: Allow investors to register and access personal data.
Data Persistence: Enable corporate decision makers to store and access retrieved data.
Error Handling: Provide market researchers with error handling and informative messages.
Risk Tools: Offer risk managers tools to assess market risks and generate custom reports.
Graphing: Enable financial analysts to view and compare time-series graphs of daily share prices.

**Non-Functional Requirements**
Usability: Ensure the application is user-friendly and intuitive.
Performance: Optimize the application for quick and efficient responses.
Scalability: Design the application to handle growth in users and data volume.
Security: Implement robust security measures to protect user data.
Reliability: Ensure high availability with minimal downtime.
Maintainability: Develop a well-organised codebase for easy updates and maintenance.

##Requirements Investigated in Detail with Careful Consideration of All Aspects

**Investor**

Context: Investors need secure access to their personal data and the ability to register and log in to the application.
Challenges: Ensuring secure and safe authentication and protecting user data from unauthorized access.
Solutions: Implement robust password hashing (e.g., bcrypt) and secure session management to protect user credentials. Use encryption.

**Corporate Decision Maker**

Context: Corporate decision makers require reliable storage and retrieval of past share price data for analysis.
Challenges: Ensuring data integrity and efficient data retrieval, especially with large datasets.
Solutions: Regularly back up data to ensure recovery in case of system failures.

**Market Researcher**

Context: Market researchers need the application to handle errors to ensure the correct data is given.
Challenges: Network instability can affect data retrieval, leading to user frustration.
Solutions: Implement local caching to store data temporarily during network outages. 

**Risk Manager**

Context: Risk managers need tools to assess market risks based on historical share price data.
Challenges: Processing large amounts of data and applying complex statistical models.
Solutions: Use data aggregation techniques to handle large datasets. Implement statistical models like VaR and CVaR to assess volatility. 


**Financial Analyst**

Context: Financial analysts require graphical tools to visualise and compare share price data.
Challenges: Ensuring smooth performance with large datasets and providing interactive features.
Solutions: Use efficient charting libraries (e.g., Chart.js) to handle large datasets. 



**Requirements Organised and Presented Effectively**

•	Dependencies: 
•	Prioritisation Matrix: 

**Requirements Aligned to Overall Goals of Project**

•	User Authentication: Supports secure access to personal data and preferences.
•	Data Storage: Enhances usability by allowing offline access to data.
•	Graph Display: Provides a visual tool for comparing share prices, this will be in analysis and decision-making.
•	Input Validation: Ensures data integrity by validating user inputs.
•	Error Handling: Improves user experience by managing errors.
•	User Interface: Enhances usability with an responsive design.
•	User Preferences: Provides flexibility and convenience by allowing customisation and saving of preferences and graphs.
•	Security: Protects user data and ensures compliance with privacy regulations.
